// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TrayTool.Repository;

namespace TrayTool.Repository.Migrations
{
    [DbContext(typeof(TrayToolDb))]
    partial class TrayToolDbModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.10");

            modelBuilder.Entity("TrayTool.Repository.Model.BaseModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("DirectoryId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DirectoryId");

                    b.ToTable("BaseModels");

                    b.HasDiscriminator<string>("Discriminator").HasValue("BaseModel");
                });

            modelBuilder.Entity("TrayTool.Repository.Model.Argument", b =>
                {
                    b.HasBaseType("TrayTool.Repository.Model.BaseModel");

                    b.Property<string>("Concatenator")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ItemId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Key")
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .HasColumnType("TEXT");

                    b.HasIndex("ItemId");

                    b.HasDiscriminator().HasValue("Argument");
                });

            modelBuilder.Entity("TrayTool.Repository.Model.Seperator", b =>
                {
                    b.HasBaseType("TrayTool.Repository.Model.BaseModel");

                    b.Property<byte[]>("Image")
                        .HasColumnType("BLOB");

                    b.Property<string>("ImagePath")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("TEXT");

                    b.HasIndex("ParentId");

                    b.HasDiscriminator().HasValue("Seperator");
                });

            modelBuilder.Entity("TrayTool.Repository.Model.AbstractItem", b =>
                {
                    b.HasBaseType("TrayTool.Repository.Model.Seperator");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("AbstractItem");
                });

            modelBuilder.Entity("TrayTool.Repository.Model.Directory", b =>
                {
                    b.HasBaseType("TrayTool.Repository.Model.AbstractItem");

                    b.HasDiscriminator().HasValue("Directory");
                });

            modelBuilder.Entity("TrayTool.Repository.Model.Item", b =>
                {
                    b.HasBaseType("TrayTool.Repository.Model.AbstractItem");

                    b.Property<string>("Path")
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("Item");
                });

            modelBuilder.Entity("TrayTool.Repository.Model.BaseModel", b =>
                {
                    b.HasOne("TrayTool.Repository.Model.Directory", null)
                        .WithMany("Children")
                        .HasForeignKey("DirectoryId");
                });

            modelBuilder.Entity("TrayTool.Repository.Model.Argument", b =>
                {
                    b.HasOne("TrayTool.Repository.Model.Item", null)
                        .WithMany("Arguments")
                        .HasForeignKey("ItemId");
                });

            modelBuilder.Entity("TrayTool.Repository.Model.Seperator", b =>
                {
                    b.HasOne("TrayTool.Repository.Model.Directory", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentId");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("TrayTool.Repository.Model.Directory", b =>
                {
                    b.Navigation("Children");
                });

            modelBuilder.Entity("TrayTool.Repository.Model.Item", b =>
                {
                    b.Navigation("Arguments");
                });
#pragma warning restore 612, 618
        }
    }
}
